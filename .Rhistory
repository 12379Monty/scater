coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads)
total_reads <- sum(pData(scs_mouse)$depth)
fData(scs_mouse)<- mutate(fData(scs_mouse),
Total_Gene_Reads = rowSums(counts(scs_mouse)),
Prop_Total_Reads = rowSums(counts(scs_mouse)) /
total_reads) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_mouse) <- mutate(fData(scs_mouse),
mgi_symbol = factor(mgi_symbol,
levels = unique(mgi_symbol[oo]))) %>%
new("AnnotatedDataFrame", data = .)
top50_pctage <- sum(fData(scs_mouse)$Total_Gene_Reads[oo[1:50]]) / total_reads *
100
plt_top50_pct_total_reads <- fData(scs_mouse)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = Gene)) +
geom_point(size = 8) +
annotate("text", x = 20, y = 2.5,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads)
total_reads <- sum(pData(scs_mouse)$depth)
fData(scs_mouse)<- mutate(fData(scs_mouse),
Total_Gene_Reads = rowSums(counts(scs_mouse)),
Prop_Total_Reads = rowSums(counts(scs_mouse)) /
total_reads) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse)$Prop_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_mouse) <- mutate(fData(scs_mouse),
mgi_symbol = factor(mgi_symbol,
levels = unique(mgi_symbol[oo]))) %>%
")I"
oo <- fData(scs_mouse)$Prop_Total_Reads %>% order(decreasing = TRUE)
fData(scs_mouse) <- mutate(fData(scs_mouse),
mgi_symbol = factor(mgi_symbol,
levels = unique(mgi_symbol[oo]))) %>%
new("AnnotatedDataFrame", data = .)
top50_pctage <- sum(fData(scs_mouse)$Total_Gene_Reads[oo[1:50]]) / total_reads *
100
plt_top50_pct_total_reads <- fData(scs_mouse)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = Gene)) +
geom_point(size = 8) +
annotate("text", x = 20, y = 2,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads)
plt_top50_pct_total_reads <- fData(scs_mouse)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = mgi_symbol)) +
geom_point(size = 8) +
annotate("text", x = 20, y = 2,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads)
oo <- fData(scs_mouse)$Prop_Total_Reads %>% order(decreasing = TRUE)
fData(scs_mouse) <- mutate(fData(scs_mouse),
mgi_symbol = factor(mgi_symbol,
levels = rev(unique(mgi_symbol[oo])))) %>%
new("AnnotatedDataFrame", data = .)
top50_pctage <- sum(fData(scs_mouse)$Total_Gene_Reads[oo[1:50]]) / total_reads *
100
plt_top50_pct_total_reads <- fData(scs_mouse)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = mgi_symbol)) +
geom_point(size = 8) +
annotate("text", x = 20, y = 2,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads)
total_reads <- sum(pData(scs_human_filt)$depth)
fData(scs_human_filt)<- mutate(fData(scs_human_filt),
Total_Gene_Reads = rowSums(counts(scs_human_filt)),
Prop_Total_Reads = rowSums(counts(scs_human_filt)) /
total_reads) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_human_filt)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_human_filt)<- mutate(fData(scs_human_filt),
Gene = factor(Gene, levels = Gene[rev(oo)]),
hgnc_symbol = factor(hgnc_symbol,
levels = unique(hgnc_symbol[rev(oo)]))) %>%
new("AnnotatedDataFrame", data = .)
top50_pctage <- sum(fData(scs_human_filt)$Total_Gene_Reads[oo[1:50]]) /
total_reads * 100
plt_top50_pct_total_reads_after_filt <- fData(scs_human_filt)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = hgnc_symbol)) +
geom_point(size = 8) +
annotate("text", x = 5, y = 2.5,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads_after_filt)
total_reads <- sum(pData(scs_human)$depth)
fData(scs_human)<- mutate(fData(scs_human),
Total_Gene_Reads = rowSums(counts(scs_human)),
Prop_Total_Reads = rowSums(counts(scs_human)) /
total_reads) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_human)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_human)<- mutate(fData(scs_human),
Gene = factor(Gene, levels = Gene[rev(oo)]),
hgnc_symbol = factor(hgnc_symbol,
levels = unique(hgnc_symbol[rev(oo)]))) %>%
new("AnnotatedDataFrame", data = .)
top50_pctage <- sum(fData(scs_human)$Total_Gene_Reads[oo[1:50]]) / total_reads *
100
plt_top50_pct_total_reads <- fData(scs_human)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = hgnc_symbol)) +
geom_point(size = 8, alpha = 0.7) +
annotate("text", x = 20, y = 5,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads)
total_reads <- sum(pData(scs_mouse)$depth)
fData(scs_mouse)<- mutate(fData(scs_mouse),
Total_Gene_Reads = rowSums(counts(scs_mouse)),
Prop_Total_Reads = rowSums(counts(scs_mouse)) /
total_reads) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse)$Prop_Total_Reads %>% order(decreasing = TRUE)
fData(scs_mouse) <- mutate(fData(scs_mouse),
mgi_symbol = factor(mgi_symbol,
levels = rev(unique(mgi_symbol[oo])))) %>%
new("AnnotatedDataFrame", data = .)
top50_pctage <- sum(fData(scs_mouse)$Total_Gene_Reads[oo[1:50]]) / total_reads *
100
plt_top50_pct_total_reads <- fData(scs_mouse)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = mgi_symbol)) +
geom_point(size = 8) +
annotate("text", x = 20, y = 2,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads)
sum(fData(scs_mouse)$Total_Gene_Reads == 0)
gene_nonzero_expr <- (fData(scs_mouse)$Total_Gene_Reads > 0)
scs_mouse_filt <- scs_mouse[gene_nonzero_expr, ]
pc_mouse <- prcomp(exprs(scs_mouse_filt), retx = TRUE, center = TRUE,
scale. = TRUE)
plot(pc_mouse)
biplot(pc_mouse, xlim = c(-0.03, 0.03))
biplot(pc_mouse, xlim = c(-0.06, 0.03))
col_source <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse_filt)$cell_source)]
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell cource")
legend()
legend(levels(factor(pData(scs_mouse_filt)$cell_source)), cols = tableau_color_pal(palette="tableau10")(10))
legend(levels(factor(pData(scs_mouse_filt)$cell_source)), col = tableau_color_pal(palette="tableau10")(10))
legend(legend = levels(factor(pData(scs_mouse_filt)$cell_source)), col = tableau_color_pal(palette="tableau10")(10))
legend(x = 0, y = 0, legend = levels(factor(pData(scs_mouse_filt)$cell_source)), col = tableau_color_pal(palette="tableau10")(10))
par(xpd=TRUE)
legend(x = 0, y = 0, legend = levels(factor(pData(scs_mouse_filt)$cell_source)), col = tableau_color_pal(palette="tableau10")(10))
legend(x = 0, y = 0, legend = levels(factor(pData(scs_mouse_filt)$cell_source)), col = tableau_color_pal(palette="tableau10")(nlevels(factor(pData(scs_mouse_filt)$cell_source))))
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell cource")
par(xpd=TRUE)
legend(0, 1, as.vector(unique(iris$Species)),
fill=c("red", "green3", "blue"))
legend(x = 0, y = 1, legend = levels(factor(pData(scs_mouse_filt)$cell_source)), col = tableau_color_pal(palette="tableau10")(nlevels(factor(pData(scs_mouse_filt)$cell_source))))
```
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell cource")
par(xpd=TRUE)
legend(x = 0, y = 1, legend = levels(factor(pData(scs_mouse_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10))
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell cource")
par(xpd = TRUE)
legend(x = 1, y = 1, legend = levels(factor(pData(scs_mouse_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10))
?legend
col_source <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse_filt)$cell_source)]
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell cource")
par(xpd = TRUE)
legend("bottomright", legend = levels(factor(pData(scs_mouse_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10)
)
col_source <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse_filt)$cell_source)]
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell cource")
par(xpd = TRUE)
legend("topright", legend = levels(factor(pData(scs_mouse_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10))
col_source <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_human_filt)$cell_source)]
pairs(pc_human$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell source")
par(xpd = TRUE)
legend("topright", legend = levels(factor(pData(scs_human_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10))
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell source")
legend("topright", legend = levels(factor(pData(scs_mouse_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10), xpd = TRUE)
col_source <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse_filt)$cell_source)]
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell source")
legend("topright", legend = levels(factor(pData(scs_mouse_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10), xpd = TRUE)
library(RColorBrewer)
col_depth <- pData(scs_mouse)$depth %>% range() %>% diff() %>%
colorRampPalette(brewer.pal(9, "Reds")[2:9])(.)
pairs(pc_mouse$rotation[, 1:5],
col = scales::alpha(col_depth[pData(scs_mouse)$depth], 0.5),
pch = 19, main = "depth")
col_filter_depth <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse)$filter_on_depth)]
pairs(pc_mouse$rotation[, 1:5],
col = scales::alpha(col_filter_depth, 0.5),
pch = 19, main = "filter on depth")
col_coverage <- pData(scs_mouse)$coverage %>% range() %>% diff() %>%
colorRampPalette(brewer.pal(9, "Reds")[2:9])(.)
pairs(pc_mouse$rotation[, 1:5],
col = scales::alpha(col_coverage[pData(scs_mouse)$coverage], 0.5),
pch = 19, main = "coverage")
col_filter_coverage <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse)$filter_on_coverage)]
pairs(pc_mouse$rotation[, 1:5],
col = scales::alpha(col_filter_coverage, 0.5),
pch = 19, main = "filter on coverage")
artefact_genes <- c("__alignment_not_unique", "__no_feature", "__ambiguous")
any(rownames(scs_mouse_filt) %in% artefact_genes)
total_reads <- sum(pData(scs_mouse_filt)$depth)
fData(scs_mouse_filt)<- mutate(fData(scs_mouse_filt),
Total_Gene_Reads = rowSums(counts(scs_mouse_filt)),
Prop_Total_Reads = rowSums(counts(scs_mouse_filt)) /
total_reads) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse_filt)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_mouse_filt)<- mutate(fData(scs_mouse_filt),
Gene = factor(Gene, levels = Gene[rev(oo)]),
mgi_symbol = factor(mgi_symbol, levels = unique(mgi_symbol[rev(oo)]))) %>%
new("AnnotatedDataFrame", data = .)
top50_pctage <- sum(fData(scs_mouse_filt)$Total_Gene_Reads[oo[1:50]]) /
total_reads * 100
plt_top50_pct_total_reads_after_filt <- fData(scs_mouse_filt)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = Gene)) +
geom_point(size = 8) +
annotate("text", x = 5, y = 1,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads_after_filt)
plt_top50_pct_total_reads_after_filt <- fData(scs_mouse_filt)[oo[1:50],] %>%
ggplot(aes(y = 100*as.numeric(Prop_Total_Reads), x = mgi_symbol)) +
geom_point(size = 8) +
annotate("text", x = 5, y = 1,
label = paste0("top 50 genes account for\n",
format(top50_pctage, digits = 3),
"% of read counts")) +
coord_flip() +
xlab("Gene") +
ylab("% of total read counts")
print(plt_top50_pct_total_reads_after_filt)
ercc_genes <- grep("ERCC", rownames(scs_mouse_filt))
pData(scs_mouse_filt)<- mutate(pData(scs_mouse_filt),
Reads_from_ERCC =
colSums(counts(scs_mouse_filt)[ercc_genes,]),
Pct_Reads_from_ERCC = 100*Reads_from_ERCC / depth,
Cell = factor(Cell, levels =
Cell[order(Pct_Reads_from_ERCC)])) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_mouse)<- mutate(fData(scs_mouse),
Gene = factor(Gene, levels = Gene[rev(oo)])) %>%
new("AnnotatedDataFrame", data = .)
plt_pct_reads_ercc_mm <- ggplot(pData(scs_mouse_filt), aes(x = Cell,
y = Pct_Reads_from_ERCC,
colour = cell_source)) +
geom_point(size = 5, alpha = 0.7) +
scale_colour_tableau() +
xlab("Cell") +
ylab("% reads from ERCC genes") +
theme(legend.justification=c(1, 0), legend.position=c(1, 0),
axis.text.y = element_text(size = 7)) +
coord_flip()
print(plt_pct_reads_ercc_mm)
ercc_genes <- grep("ERCC", rownames(scs_mouse_filt))
pData(scs_mouse_filt)<- mutate(pData(scs_mouse_filt),
Reads_from_ERCC =
colSums(counts(scs_mouse_filt)[ercc_genes,]),
Pct_Reads_from_ERCC = 100*Reads_from_ERCC / depth,
Sample = factor(Sample, levels =
Sample[order(Pct_Reads_from_ERCC)])) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_mouse)<- mutate(fData(scs_mouse),
Gene = factor(Gene, levels = Gene[rev(oo)])) %>%
new("AnnotatedDataFrame", data = .)
plt_pct_reads_ercc_mm <- ggplot(pData(scs_mouse_filt), aes(x = Cell,
y = Pct_Reads_from_ERCC,
colour = cell_source)) +
geom_point(size = 5, alpha = 0.7) +
scale_colour_tableau() +
xlab("Cell") +
ylab("% reads from ERCC genes") +
theme(legend.justification=c(1, 0), legend.position=c(1, 0),
axis.text.y = element_text(size = 7)) +
coord_flip()
print(plt_pct_reads_ercc_mm)
ercc_genes <- grep("ERCC", rownames(scs_mouse_filt))
pData(scs_mouse_filt)<- mutate(pData(scs_mouse_filt),
Reads_from_ERCC =
colSums(counts(scs_mouse_filt)[ercc_genes,]),
Pct_Reads_from_ERCC = 100*Reads_from_ERCC / depth,
Sample = factor(Sample, levels =
Sample[order(Pct_Reads_from_ERCC)])) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_mouse)<- mutate(fData(scs_mouse),
Gene = factor(Gene, levels = Gene[rev(oo)])) %>%
new("AnnotatedDataFrame", data = .)
plt_pct_reads_ercc_mm <- ggplot(pData(scs_mouse_filt), aes(x = Sample,
y = Pct_Reads_from_ERCC,
colour = cell_source)) +
geom_point(size = 5, alpha = 0.7) +
scale_colour_tableau() +
xlab("Cell") +
ylab("% reads from ERCC genes") +
theme(legend.justification=c(1, 0), legend.position=c(1, 0),
axis.text.y = element_text(size = 7)) +
coord_flip()
print(plt_pct_reads_ercc_mm)
sum(fData(scs_mouse)$Total_Gene_Reads == 0)
gene_nonzero_expr <- (fData(scs_mouse)$Total_Gene_Reads > 0)
scs_mouse_filt <- scs_mouse[gene_nonzero_expr, ]
pc_mouse <- prcomp(exprs(scs_mouse_filt), retx = TRUE, center = TRUE,
scale. = TRUE)
plot(pc_mouse)
col_source <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse_filt)$cell_source)]
pairs(pc_mouse$rotation[, 1:5], col = scales::alpha(col_source, 0.5), pch = 19,
main = "cell source")
legend("topright", legend = levels(factor(pData(scs_mouse_filt)$cell_source)),
fill = tableau_color_pal(palette="tableau10")(10), xpd = TRUE)
col_filter_coverage <- tableau_color_pal(palette="tableau10")(10)[factor(pData(scs_mouse)$filter_on_coverage)]
pairs(pc_mouse$rotation[, 1:5],
col = scales::alpha(col_filter_coverage, 0.5),
pch = 19, main = "filter on coverage")
print(plt_pct_reads_ercc)
print(plt_pct_reads_ercc_mm)
save(scs_human_filt, "cache/scs_human_filtered.RData")
save(scs_human_filt, file = "cache/scs_human_filtered.RData")
save(scs_mouse_filt, file = "cache/scs_mouse_filtered.RData")
ercc_genes <- grep("ERCC", rownames(scs_mouse_filt))
pData(scs_mouse_filt)<- mutate(pData(scs_mouse_filt),
Reads_from_ERCC =
colSums(counts(scs_mouse_filt)[ercc_genes,]),
Pct_Reads_from_ERCC = 100*Reads_from_ERCC / depth,
Sample = factor(Sample, levels =
Sample[order(Pct_Reads_from_ERCC)])) %>%
new("AnnotatedDataFrame", data = .)
oo <- fData(scs_mouse)$Total_Gene_Reads %>% order(decreasing = TRUE)
fData(scs_mouse)<- mutate(fData(scs_mouse),
Gene = factor(Gene, levels = Gene[rev(oo)])) %>%
new("AnnotatedDataFrame", data = .)
plt_pct_reads_ercc_mm <- ggplot(pData(scs_mouse_filt), aes(x = Sample,
y = Pct_Reads_from_ERCC,
colour = cell_source)) +
geom_point(size = 5, alpha = 0.7) +
scale_colour_tableau() +
xlab("Cell") +
ylab("% reads from ERCC genes") +
theme(legend.justification=c(1, 0), legend.position=c(1, 0),
axis.text.y = element_text(size = 7)) +
coord_flip()
print(plt_pct_reads_ercc_mm)
1200/4/3
1200/4*3
12/7
12/1.6
print(plt_cov_v_depth)
pData(scs_human) <- mutate(pData(scs_human),
depth = colSums(counts(scs_human)),
coverage = colSums(isExpr(scs_human))
) %>%
new("AnnotatedDataFrame", data = .)
plt_cov_v_depth <- ggplot(pData(scs_human), aes(x = log10(depth), y = coverage,
colour = cell_source)) +
geom_point(size = 5, alpha = 0.7) +
geom_rug(alpha = 0.5) +
scale_colour_tableau() +
xlab("depth (log10 read counts)") +
ylab("coverage (total genes detected)") +
theme(legend.justification=c(0, 1), legend.position=c(0.05, 1))
print(plt_cov_v_depth)
pData(scs_human) %>% filter(grep("BLANK", cell_source))
pData(scs_human) %>% filter(grepl("BLANK", cell_source))
pData(scs_human) %>% filter(grepl("BLANK", cell_source))
cbind(expr(scs_human)["JAK2", ], counts(scs_human)["JAK2", ])
cbind(exprs(scs_human)["JAK2", ], counts(scs_human)["JAK2", ])
expr(scs_human)["JAK2", ]
exprs(scs_human)["JAK2", ]
exprs(scs_human["JAK2", ])
scs_human[135,]
exprs(scs_human[135,])
pData(scs_human) %>% filter(grepl("BLANK", cell_source))
chosen_gene <- fData(scs_human)$hgnc_symbol == "JAK2"
to_plot <- data.frame(log2_cpm = exprs(scs_human)[chosen_gene,],
count = counts(scs_human)[chosen_gene,],
pData(scs_human))
plt_jak2_expr <- to_plot %>%
ggplot(aes(y = exprs, x = factor(cell_source), colour = cell_source,
group = factor(cell_source))) +
geom_violin() +
#     stat_fivenumber() +
geom_jitter(height = 0, size = 5, alpha = 0.5) +
scale_colour_tableau() +
xlab("Cell source") +
ylab("JAK2 expression: log2(counts-per-million + 1)") +
guides(colour = FALSE) +
coord_flip()
print(plt_jak2_expr)
exprs(scs_human)[chosen_gene,]
count = counts(scs_human)[chosen_gene,]
counts(scs_human)[chosen_gene,]
chosen_gene <- fData(scs_human)$hgnc_symbol == "JAK2"
to_plot <- data.frame(log2_cpm = exprs(scs_human)[chosen_gene,],
count = counts(scs_human)[chosen_gene,],
pData(scs_human))
plt_jak2_expr <- to_plot %>%
ggplot(aes(y = exprs, x = factor(cell_source), colour = cell_source,
group = factor(cell_source))) +
geom_violin() +
#     stat_fivenumber() +
geom_jitter(height = 0, size = 5, alpha = 0.5) +
scale_colour_tableau() +
xlab("Cell source") +
ylab("JAK2 expression: log2(counts-per-million + 1)") +
guides(colour = FALSE) +
coord_flip()
print(plt_jak2_expr)
chosen_gene <- fData(scs_human)$hgnc_symbol == "JAK2"
to_plot <- data.frame(log2_cpm = exprs(scs_human)[chosen_gene,],
counts = counts(scs_human)[chosen_gene,],
pData(scs_human))
plt_jak2_expr <- to_plot %>%
ggplot(aes(y = exprs, x = factor(cell_source), colour = cell_source,
group = factor(cell_source))) +
geom_violin() +
#     stat_fivenumber() +
geom_jitter(height = 0, size = 5, alpha = 0.5) +
scale_colour_tableau() +
xlab("Cell source") +
ylab("JAK2 expression: log2(counts-per-million + 1)") +
guides(colour = FALSE) +
coord_flip()
print(plt_jak2_expr)
to_plot
plt_jak2_expr <- to_plot %>%
ggplot(aes(y = log2_cpm, x = factor(cell_source), colour = cell_source,
group = factor(cell_source))) +
geom_violin() +
#     stat_fivenumber() +
geom_jitter(height = 0, size = 5, alpha = 0.5) +
scale_colour_tableau() +
xlab("Cell source") +
ylab("JAK2 expression: log2(counts-per-million + 1)") +
guides(colour = FALSE) +
coord_flip()
print(plt_jak2_expr)
theme_set(theme_bw(16))
print(plt_jak2_expr)
jak2_human <- to_plot
chosen_gene <- fData(scs_mouse)$mgi_symbol == "Jak2"
to_plot <- data.frame(log2_cpm = exprs(scs_mouse)[chosen_gene,],
counts = counts(scs_mouse)[chosen_gene,],
pData(scs_mouse))
plt_jak2_expr <- to_plot %>%
ggplot(aes(y = log2_cpm, x = factor(cell_source), colour = cell_source,
group = factor(cell_source))) +
geom_violin() +
#     stat_fivenumber() +
geom_jitter(height = 0, size = 5, alpha = 0.5) +
scale_colour_tableau() +
xlab("Cell source") +
ylab("Jak2 expression: log2(counts-per-million)") +
guides(colour = FALSE) +
coord_flip()
print(plt_jak2_expr)
jak2_mouse <- to_plot
rbind(jak2_mouse, jak2_human)
write.csv(rbind(jak2_mouse, jak2_human), file = "results/jak2_expression.csv",
quote = FALSE)
write.csv(rbind(jak2_mouse, jak2_human), file = "results/jak2_expression.csv",
quote = FALSE)
