% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/qc.R
\name{plotExplanatoryVariables}
\alias{plotExplanatoryVariables}
\title{Plot explanatory variables ordered by percentage of phenotypic variance explained}
\usage{
plotExplanatoryVariables(object, nvars_to_plot = 5, min_marginal_r2 = 0,
  variables = NULL, return_object = FALSE, ...)
}
\arguments{
\item{object}{an SCESet object containing expression values and
experimental information. Must have been appropriately prepared.}

\item{nvars_to_plot}{integer, the number of variables to plot in the pairs
plot. Default value is 5.}

\item{min_marginal_r2}{numeric scalar giving the minimal value required for
median marginal R-squared for a variable to be plotted. Only variables with a
median marginal R-squared strictly larger than this value will be plotted.}

\item{variables}{optional character vector giving the variables to be plotted.
Default is \code{NULL}, in which case all variables in \code{pData(object)}
are considered and the \code{nvars_to_plot} variables with the highest median
marginal R-squared are plotted.}

\item{return_object}{logical, should an \code{SCESet} object with median
marginal R-squared values added to \code{varMetadata(object)} be returned?}

\item{...}{parameters to be passed to \code{\link{pairs}}.}
}
\description{
Plot explanatory variables ordered by percentage of phenotypic variance explained
}
\details{
Function produces a pairs plot of the explanatory variables ordered
by the percentage of feature expression variance (as measured by R-squared in a
marginal linear model) explained by variable. Median percentage R-squared is
reported on the plot for each variable. Discrete variables are coerced to a
factor and plotted as integers with jittering. Variables with only one unique
value are quietly ignored.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
pd <- new("AnnotatedDataFrame", data = sc_example_cell_info)
rownames(pd) <- pd$Cell
example_sceset <- newSCESet(countData = sc_example_counts, phenoData = pd)
example_sceset <- calculateQCMetrics(example_sceset)
vars <- names(pData(example_sceset))[c(2:3, 5:14)]
plotExplanatoryVariables(example_sceset, variables=vars)
}

