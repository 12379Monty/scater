% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plotting.R
\name{plotExpression}
\alias{plotExpression}
\title{Plot expression values for a set of genes or features}
\usage{
plotExpression(features, object, x, exprs_type = "exprs", colour = NULL,
  shape = NULL, size = NULL, ncol = 2, xlab = NULL,
  show_median = FALSE, show_violin = FALSE)
}
\arguments{
\item{features}{a character vector of feature names or Boolean
vector indicating which features should have their expression
values plotted}

\item{object}{an SCESet object containing expression values and
experimental information. Must have been appropriately prepared.}

\item{x}{character string providing a column name of \code{pData(object)} to
plot on the x-axis in the expression plot(s)}

\item{exprs_type}{character string indicating which expression values to plot:
either "exprs" for the expression value defined in the \code{exprs} slot or
"counts" to plot log2(counts-per-million + 1) using counts from the
\code{counts} slot of \code{object}}

\item{colour}{optional character string supplying name of a column of
\code{pData(object)} which will be used as a variable by which to colour
expression values on the plot.}

\item{shape}{optional character string supplying name of a column of
\code{pData(object)} which will be used as a variable to define the shape of
points for expression values on the plot.}

\item{size}{optional character string supplying name of a column of
\code{pData(object)} which will be used as a variable to define the size of
points for expression values on the plot.}

\item{ncol}{number of columns to be used for the panels of the plot}

\item{xlab}{label for x-axis; if \code{NULL} (default), then \code{x} will be
used as the x-axis label}

\item{show_median}{logical, show the median for each group on the plot}

\item{show_violin}{logical, show a violin plot for the distribution
for each group on the plot}

\item{ylab}{label for y-axis}
}
\description{
Plot expression values for a set of genes or features
}
\details{
Plot expression values (default log2(counts-per-million +
1)) for a set of genes or features.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
pd <- new("AnnotatedDataFrame", data = sc_example_cell_info)
example_sceset <- newSCESet(countData = sc_example_counts, phenoData = pd)
example_sceset <- calculateQCMetrics(example_sceset)
plotExpression(1:5, example_sceset, x="Mutation_Status", exprs_type="exprs",
colour="Patient", show_violin=TRUE, show_median=TRUE)
}

